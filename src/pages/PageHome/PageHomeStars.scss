  //*******************\\
 // STARFIELD SCSS V1.0 \\
//***********************\\

// Saransh - Original codepen
// |- https://codepen.io/saransh/pen/BKJun
// Sakiskid - Updated to include expansive configuration and fit most viewports
// |- https://www.github.com/Sakiskid

@use "sass:color";
@use "sass:math";

//////////////////////
/// CONFIGURATION ////
//////////////////////

// Number of stars
$stars-small: 300;
$stars-medium: 100;
$stars-large: 40;

// Animation Length
$duration-small: 400s;
$duration-medium: 280s;
$duration-large: 120s;

// Size of stars
$size-small: 1px;
$size-medium: 2px;
$size-large: 4px;

// Colors of stars and color mods.
// Note: Valid mod ranges are -1.0 to 1.0 -- anything else will produce errors.
$stars-clrs: #cab2ce, #C4DDFF, #FFFFFF; // Colors are randomly chosen from this array!
$mod-clr-saturation: 0.2; // eg: a value of 0.5 will make saturation 50% closer to maximum saturation without being fully saturated
$mod-clr-lightness: -0.2;
$mod-clr-alpha: -0.8;

//
// End of configuration
//

@function multiple-box-shadow($n) {
    $color: nth($stars-clrs, random(length($stars-clrs)));
    $color: color.scale(
        $color, 
        $saturation: 100%,
        $lightness: 100%,
        $alpha: 100%);
    $cur-saturation-mod: math.percentage(math.random($limit: null) * $mod-clr-saturation);
    $cur-lightness-mod: math.percentage(math.random($limit: null) * $mod-clr-lightness);
    $cur-alpha-mod: math.percentage(math.random($limit: null) * $mod-clr-alpha);
    $value: '#{random(100)}vw #{random(200)}vh #{$color}';

    @for $i from 2 through $n {
        $color: nth($stars-clrs, random(length($stars-clrs)));
        $cur-saturation-mod: math.percentage(math.random($limit: null) * $mod-clr-saturation);
        $cur-lightness-mod: math.percentage(math.random($limit: null) * $mod-clr-lightness);
        $cur-alpha-mod: math.percentage(math.random($limit: null) * $mod-clr-alpha);
        
        $color: color.scale(
            $color, 
            $saturation: $cur-saturation-mod,
            $lightness: $cur-lightness-mod,
            $alpha: 100%);
        $value: '#{$value} , #{random(100)}vw #{random(200)}vh #{$color}';
    }

    @return unquote($value);
}
  

#stars-container {
    position: absolute;
    top: 0;
    left: 0;
    height: 100vh;
    width: 100vw;

    z-index: 2;
    pointer-events: none;
}

#stars-small {
    position: relative;
    width: $size-small;
    height: $size-small;
    background: transparent;
    box-shadow: multiple-box-shadow($stars-small);

    animation: animStar $duration-small linear infinite;

    &:after {
        content: ' ';
        position: absolute;
        top: 100vh;
        width: $size-small;
        height: $size-small;
        background: transparent;
        box-shadow: multiple-box-shadow($stars-small);
    }
}

#stars-medium {
    position: relative;
    width: $size-medium;
    height: $size-medium;
    background: transparent;
    box-shadow: multiple-box-shadow($stars-medium);

    animation: animStar $duration-medium linear infinite;

    &:after {
        content: ' ';
        position: absolute;
        top: 100vh;
        width: $size-medium;
        height: $size-medium;
        background: transparent;
        box-shadow: multiple-box-shadow($stars-medium);
    }
}

#stars-large {
    position: relative;
    width: $size-large;
    height: $size-large;
    background: transparent;
    box-shadow: multiple-box-shadow($stars-large);
    animation: animStar $duration-large linear infinite;

    &:after {
        content: ' ';
        position: absolute;
        top: 100vh;
        width: $size-large;
        height: $size-large;
        background: transparent;
        box-shadow: multiple-box-shadow($stars-large);

        border-radius: 1px;
    }
}

@keyframes animStar {
  from {
    transform: translateY(0px)
  }
  to {		
    transform: translateY(-100vh)
  }
}