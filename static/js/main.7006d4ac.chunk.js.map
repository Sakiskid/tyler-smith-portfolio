{"version":3,"sources":["themes/colorScheme.js","utils/responsiveText.js","components/header/header-style.js","components/header/header.js","components/projectwrapper/project/project.js","data/projectdata.js","components/projectwrapper/projectwrapper.js","components/sectionheading/sectionheading-style.js","components/sectionheading/sectionheading.js","pages/home/home-style.js","pages/home/home.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["ColorScheme","black","white","gray","primarydark","primary","primarylight","secondary","secondarylight","vpMin","vpMax","ResponsiveTextStatic","sizeMin","sizeMax","css","HeaderStyled","styled","header","props","theme","LinkStyled","className","children","to","active","Header","page","Project","project","title","description","image","Card","Img","src","Title","Text","this","projectdata","ProjectWrapper","Container","Row","Col","map","p","sectionHeadingStyle","SectionHeadingStyled","h2","SectionHeading","headingNameStyle","HeadingName","h1","Home","GlobalStyle","createGlobalStyle","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7006d4ac.chunk.js","sourcesContent":["const ColorScheme = {\r\n    black: \"#0D0D0D\",\r\n    white: \"white\",\r\n    gray: \"#737373\",\r\n    primarydark: \"#0B1F26\",\r\n    primary: \"#134040\",\r\n    primarylight: \"#AABFBF\",\r\n    secondary: \"#7F4380\",\r\n    secondarylight: \"#CB7ECC\",\r\n}\r\n\r\n// TODO add accessibility options and schemes for color blindness\r\n\r\nexport default ColorScheme;","import { css } from 'styled-components';\r\n\r\n/**\r\n@param object Object containing sizeMin, sizeMax, viewportMin, viewportMax\r\n*/\r\nexport function ResponsiveText (properties) {\r\n    let {sizeMin, sizeMax, viewportMin, viewportMax} = properties;\r\n    return `${sizeMin}px + (${sizeMax} - ${sizeMin}) * ((100vw - ${viewportMin}px) / (${viewportMax} - ${viewportMin}))`\r\n}\r\n\r\nconst vpMin = \"320\";\r\nconst vpMax = \"1000\";\r\nexport function ResponsiveTextStatic (sizeMin, sizeMax) {\r\n    let cssArray = [\r\n        css `font-size: ${sizeMin}px;`,\r\n        css `@media screen and (min-width: ${vpMin}px) {\r\n            font-size: calc(${sizeMin}px + (${sizeMax} - ${sizeMin}) * ((100vw - ${vpMin}px) / (${vpMax} - ${vpMin})));\r\n        }`,\r\n        css `@media screen and (min-width: ${vpMax}px) {\r\n            font-size: ${sizeMax}px;\r\n        }`,\r\n    ];\r\n    return (cssArray);\r\n}","import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { ResponsiveTextStatic } from '../../utils/responsiveText';\r\n\r\nexport const LinkStyleFunc = ({ className, children, to, active }) => (\r\n    <Link className={className} to={to} active={active}>\r\n        {children}\r\n    </Link>\r\n);\r\n\r\nexport const HeaderStyled = styled.header`\r\n    font-family: 'Montserrat', sans-serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 5vh;\r\n    text-align: center;\r\n\r\n    background-color: ${props => props.theme.primary};\r\n    box-shadow: 0px 2px 2px ${props => props.theme.black};\r\n`;\r\n\r\nexport const LinkStyled = styled(LinkStyleFunc)`\r\n    ${ResponsiveTextStatic(13,20)}\r\n    /* font-size: 1em; */\r\n    height: 100%;\r\n    line-height: 250%;\r\n    vertical-align: middle;\r\n    padding: 0px 1%;\r\n    margin: 0px 0.5%;\r\n    text-decoration: none;\r\n    border-bottom: 3px solid transparent;\r\n    color: ${props => props.theme.white};\r\n\r\n    /* Set Active */\r\n    &[active=\"true\"] {\r\n        color: ${props => props.theme.primarylight};\r\n        border-bottom-color: ${props => props.theme.primarylight};\r\n    }\r\n    /* Style */\r\n    :hover {\r\n        color: ${props => props.theme.primarylight};\r\n        border-bottom: 3px solid;\r\n    }\r\n`;","import React from 'react';\r\nimport { HeaderStyled, LinkStyled } from './header-style';\r\n\r\nfunction Header (props) {\r\n    return (\r\n        <HeaderStyled>\r\n            <LinkStyled to=\"/\" active={props.page === \"home\" ? \"true\" : \"false\"} >Home</LinkStyled>\r\n            <LinkStyled to=\"/projects\" active={props.page === \"projects\" ? \"true\" : \"false\"}>Projects</LinkStyled>\r\n            <LinkStyled to=\"/clients\" active={props.page === \"clients\" ? \"true\" : \"false\"}>Clients</LinkStyled>\r\n            <LinkStyled to=\"/about\" active={props.page === \"about\" ? \"true\" : \"false\"}>About</LinkStyled>\r\n            <LinkStyled to=\"/contact\" active={props.page === \"contact\" ? \"true\" : \"false\"}>Contact</LinkStyled>\r\n        </HeaderStyled>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport \"./project-style.css\";\r\n\r\nfunction Project (props) {\r\n    const {title, description, image} = props.project;\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Img src={image}/>\r\n            <Card.Title>{title}</Card.Title>\r\n            <Card.Text>\r\n                {description}\r\n            </Card.Text>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Project;","function Project (title, description, image) {\r\n    this.title = title;\r\n    this.description = description;\r\n    this.image = image;\r\n}\r\n\r\nconst projectdata = [\r\n    new Project(\r\n        \"Overwatch League Directory (OWLD)\",\r\n        \"directory\"\r\n    ),\r\n    new Project(\r\n        \"Off Your Chest\",\r\n        \"description\",\r\n        \"img\"\r\n    ),\r\n]\r\n\r\nexport default projectdata;","import React from 'react';\r\nimport Project from './project';\r\nimport projectdata from '../../data/projectdata';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport \"./projectwrapper-style.css\";\r\n\r\nfunction ProjectWrapper () {\r\n    return (\r\n        <section>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"project-container\">\r\n                        {projectdata.map(p => <Project project={p}/>)}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProjectWrapper;","import { css } from 'styled-components';\r\nimport { ResponsiveTextStatic } from '../../utils/responsiveText';\r\n\r\nexport const sectionHeadingStyle = css`\r\n    /* Text */\r\n    ${ResponsiveTextStatic(15, 40)}\r\n    font-family: 'Lora', sans-serif;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    color: ${props => props.theme.primarylight};\r\n\r\n    /* Horizontal Rule */\r\n    & hr {\r\n        border-color: ${props => props.theme.primarylight};\r\n        border-width: 2px;\r\n        border-style: solid;\r\n        margin-top: 10px;\r\n        width: 10vw;\r\n    }\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import './sectionheading.css';\r\nimport { sectionHeadingStyle } from './sectionheading-style';\r\n\r\nconst SectionHeadingStyled = styled.h2`${sectionHeadingStyle}`;\r\n\r\nfunction SectionHeading (props) {\r\n    return (\r\n        <SectionHeadingStyled>\r\n            <span>{props.children}</span>\r\n            <hr />\r\n        </SectionHeadingStyled>\r\n    );\r\n}\r\n\r\nexport default SectionHeading;","import { css } from 'styled-components';\r\nimport { ResponsiveTextStatic } from '../../utils/responsiveText';\r\n\r\nexport const headingNameStyle = css`\r\n    ${ResponsiveTextStatic(20, 100)}\r\n\r\n    font-family: 'Raleway', sans-serif;\r\n    font-weight: 100;\r\n\r\n    margin-top: 200px;\r\n    letter-spacing: 0.2em;\r\n    width: 100vw;\r\n    text-align: center;\r\n\r\n    color: ${props => props.theme.primarylight};\r\n`","import React from 'react';\r\nimport Header from '../../components/header';\r\nimport ProjectWrapper from '../../components/projectwrapper';\r\nimport SectionHeading from '../../components/sectionheading';\r\nimport styled from 'styled-components';\r\nimport { headingNameStyle } from './home-style';\r\n\r\nconst HeadingName = styled.h1`${headingNameStyle}`;\r\n// const SectionHeading = styled.h2`${sectionHeadingStyle}`;\r\n\r\nfunction Home () {\r\n    return (\r\n        <div>\r\n            <Header page=\"home\"/>\r\n            <HeadingName>TYLER SMITH</HeadingName>\r\n            {/* <SectionHeading>Projects</SectionHeading> */}\r\n            <SectionHeading>Projects</SectionHeading>\r\n            <ProjectWrapper />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { \n  BrowserRouter as Router, \n  // Link,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport './app.css';\n\n// Themes\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport ColorScheme from \"../../themes/colorScheme\"\n\n// Pages\nimport Home from '../../pages/home/home';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: ${ColorScheme.primarydark};\n  } \n`;\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalStyle />\n      <ThemeProvider theme={ColorScheme}>\n        <Switch>\n          <Route path=\"/gallery\">\n            \n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}